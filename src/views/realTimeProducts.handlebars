<!DOCTYPE html>
<html>

<head>
    <title>Productos en tiempo real</title>
</head>

<body>
    <h1>Productos en tiempo real</h1>
    <ul id="product-list">
        {{#each productos}}
        <li id="product-{{this.id}}">
            {{this.title}} - ${{this.price}}
            <button class="deleteBtn" data-productid="{{this.id}}">Eliminar</button>
        </li>
        {{/each}}
    </ul>

    <form id="productForm" action="/api/productos" method="POST">
        <input type="text" name="title" placeholder="Título" required>
        <input type="text" name="description" placeholder="Descripción" required>
        <input type="number" name="price" placeholder="Precio" step="0.01" required>
        <input type="text" name="code" placeholder="Codigo" required>
        <input type="number" name="stock" placeholder="Stock" required>
        <button type="submit">Agregar Producto</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();        
        socket.on('productAdded', (product) => {
            const productList = document.querySelector('#product-list');
            const newProduct = document.createElement('li');
            newProduct.id = 'product-' + product.id;
            newProduct.textContent = product.title + ' - $' + product.price;

            const deleteBtn = document.createElement('button');
            deleteBtn.classList.add('deleteBtn');
            deleteBtn.setAttribute('data-productid', product.id);
            deleteBtn.textContent = 'Eliminar';

            newProduct.appendChild(deleteBtn);
            productList.appendChild(newProduct);
        });
        socket.on('productDeleted', (productId) => {
            const productToDelete = document.querySelector(`#product-${productId}`);
            if (productToDelete) {
                productToDelete.remove();
            }
        });
        const productForm = document.getElementById('productForm');
        productForm.addEventListener('submit', (event) => {
            event.preventDefault();

            const formData = new FormData(productForm);
            const product = Object.fromEntries(formData.entries());

            socket.emit('addProduct', product);
            productForm.reset();
        });
        document.addEventListener('click', (event) => {
            if (event.target.classList.contains('deleteBtn')) {
                const productId = Number(event.target.getAttribute('data-productid'));
                socket.emit('deleteProduct', productId);
            }
        });
    </script>
</body>

</html>
